buildscript {
	ext {
		springBootVersion = '2.2.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

jar {
	archiveBaseName = 'phase4-scsb-batch-scheduler'
	archiveVersion = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.11
targetCompatibility = 1.11

repositories {
	mavenCentral()
}


dependencies {
	implementation('org.springframework.boot:spring-boot-starter')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.batch:spring-batch-core:4.2.2.RELEASE')
	implementation('org.springframework.boot:spring-boot-starter-batch')
	implementation('org.quartz-scheduler:quartz:2.3.2')
	implementation("org.springframework.batch:spring-batch-admin-manager:1.3.1.RELEASE") {
		exclude group: 'org.slf4j', module:'slf4j-log4j12';
	}
	implementation('com.thoughtworks.xstream:xstream:1.4.12')
	implementation("org.springframework.batch:spring-batch-admin-resources:1.3.1.RELEASE") {
		exclude group: 'org.slf4j', module:'slf4j-log4j12'
	}
	runtime('mysql:mysql-connector-java')
	//implementation("org.springframework.boot:spring-boot-starter-actuaor")
	implementation('org.apache.camel:camel-activemq:3.2.0')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.apache.activemq:activemq-camel:5.15.12')
	implementation('org.apache.activemq:activemq-pool:5.15.12')
	implementation('org.apache.activemq:activemq-broker:5.15.12')
	implementation('org.apache.activemq:activemq-client:5.15.12')
	implementation('org.apache.camel.springboot:camel-spring-boot-starter:3.2.0')
	implementation('org.apache.camel:camel-jms:3.2.0')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')

}

jacocoTestReport {
	group = "Reporting"
	reports {
		xml.enabled true
		csv.enabled false
		html.enabled = true
		html.destination "${buildDir}/jacocoHtml"
	}
}

task scsbBatchSchedulerJavadocs(type: Javadoc) {
	source = sourceSets.main.java
	classpath = configurations.compile
	options.addStringOption('Xdoclint:none', '-quiet')
	String home = System.getProperty("user.home");
	destinationDir =  new File(home+"/scsb-javadocs/scsb-batch-scheduler");

}